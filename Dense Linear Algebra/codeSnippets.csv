dwarf,benchnmark,code_section
dense_l_algebra,bt.cpp,"void add(){ int i, j, k, m; if(timeron){timer_start(T_ADD);} for(k=1; k<=grid_points[2]-2; k++){ for(j=1; j<=grid_points[1]-2; j++){ for(i=1; i<=grid_points[0]-2; i++){ for(m=0; m<5; m++){ u[k][j][i][m]=u[k][j][i][m]+rhs[k][j][i][m]; }}}} if(timeron){timer_stop(T_ADD);} }"
dense_l_algebra,bt.cpp,"for(k=1; k<=grid_points[2]-2; k++){for(j=1; j<=grid_points[1]-2; j++){for(i=1; i<=grid_points[0]-2; i++){uijk=us[k][j][i];up1=us[k][j][i+1];um1=us[k][j][i-1];rhs[k][j][i][0]=rhs[k][j][i][0]+dx1tx1*(u[k][j][i+1][0]-2.0*u[k][j][i][0]+u[k][j][i-1][0])-tx2*(u[k][j][i+1][1]-u[k][j][i-1][1]);rhs[k][j][i][1]=rhs[k][j][i][1]+dx2tx1*(u[k][j][i+1][1]-2.0*u[k][j][i][1]+u[k][j][i-1][1])+xxcon2*con43*(up1-2.0*uijk+um1)-tx2*(u[k][j][i+1][1]*up1-u[k][j][i-1][1]*um1+(u[k][j][i+1][4]-square[k][j][i+1]-u[k][j][i-1][4]+square[k][j][i-1])*c2);rhs[k][j][i][2]=rhs[k][j][i][2]+dx3tx1*(u[k][j][i+1][2]-2.0*u[k][j][i][2]+u[k][j][i-1][2])+xxcon2*(vs[k][j][i+1]-2.0*vs[k][j][i]+vs[k][j][i-1])-tx2*(u[k][j][i+1][2]*up1-u[k][j][i-1][2]*um1);rhs[k][j][i][3]=rhs[k][j][i][3]+dx4tx1*(u[k][j][i+1][3]-2.0*u[k][j][i][3]+u[k][j][i-1][3])+xxcon2*(ws[k][j][i+1]-2.0*ws[k][j][i]+ws[k][j][i-1])-tx2*(u[k][j][i+1][3]*up1-u[k][j][i-1][3]*um1);rhs[k][j][i][4]=rhs[k][j][i][4]+dx5tx1*(u[k][j][i+1][4]-2.0*u[k][j][i][4]+u[k][j][i-1][4])+xxcon3*(qs[k][j][i+1]-2.0*qs[k][j][i]+qs[k][j][i-1])+xxcon4*(up1*up1-2.0*uijk*uijk+um1*um1)+xxcon5*(u[k][j][i+1][4]*rho_i[k][j][i+1]-2.0*u[k][j][i][4]*rho_i[k][j][i]+u[k][j][i-1][4]*rho_i[k][j][i-1])-tx2*((c1*u[k][j][i+1][4]-c2*square[k][j][i+1])*up1-(c1*u[k][j][i-1][4]-c2*square[k][j][i-1])*um1);}}}"
dense_l_algebra,lud.c,"void matrix_multiply(float *inputa, float *inputb, float *output, int size) { int i, j, k; for (i=0; i < size; i++) for (k=0; k < size; k++) for (j=0; j < size; j++) output[i*size+j] = inputa[i*size+k] * inputb[k*size+j]; }"
